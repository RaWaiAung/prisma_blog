// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(uuid())
  email                String    @unique
  name                 String    @db.VarChar(20)
  password             String
  role                 Role      @default(User)
  Post                 Post[]
  Profile              Profile?
  passwordResetToken   String?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model Post {
  id         String       @id @default(uuid())
  fileId     String
  file       File?        @relation(fields: [fileId], references: [id])
  title      String       @db.VarChar(255)
  content    String       @db.VarChar(255)
  published  Boolean      @default(false)
  authorId   String?
  author     User?        @relation(fields: [authorId], references: [id])
  TagsOnPost TagsOnPost[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Profile {
  id        String   @id @default(uuid())
  bio       String   @db.VarChar(20)
  image     String?
  user      User     @relation(fields: [userEmail], references: [email],onDelete: Cascade, onUpdate: Cascade)
  userEmail String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TagsOnPost {
  id        String   @id @default(uuid())
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  tagId     String
  tag       Tag      @relation(fields: [tagId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        String   @id @default(uuid())
  filename  String   @db.VarChar(255)
  filePath  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
  Tag       Tag[]
}

model Tag {
  id         String       @id @default(uuid())
  hashtag    String
  fileId     String
  file       File?        @relation(fields: [fileId], references: [id])
  TagsOnPost TagsOnPost[]
}

enum Role {
  Admin
  User
  SuperAdmin
}
